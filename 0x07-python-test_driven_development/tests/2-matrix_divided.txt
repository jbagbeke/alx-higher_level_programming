"""
Test cases fora matrix

Example:

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2, 3], [4, 5, 6]]

>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]

>>> matrix = [[1.59, -2, 3], [4.343, 20, -8.4]]

>>> matrix_divided(matrix, 3)
[[0.53, -0.67, 1.0], [1.45, 6.67, -2.8]]

>>> print(matrix)
[[1.59, -2, 3], [4.343, 20, -8.4]]

>>> matrix = [[1.59, 8.234, 3.93], [4.343, 2.0, 8.4]]

>>> matrix_divided(matrix, 9)
[[0.18, 0.91, 0.44], [0.48, 0.22, 0.93]]

>>> print(matrix)
[[1.59, 8.234, 3.93], [4.343, 2.0, 8.4]]

>>> matrix = [[-1.59, -7.234, -3.93], [-4.343, -2.0, -8.4]]

>>> matrix_divided(matrix, 9)
[[-0.18, -0.8, -0.44], [-0.48, -0.22, -0.93]]

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix = [[-1.59, 7.234, -3.93], ["inf", 2.0, -8.4]]

>>> matrix_divided(matrix, 4)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix = [[]]

>>> matrix_divided(matrix, 6)
[[]]

>>> matrix = [["inf"]]

>>> matrix_divided(matrix, 6)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
